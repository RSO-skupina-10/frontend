<!DOCTYPE html>
<html lang="en">

<head>
    <title>{{title}}</title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="DeliveryApp">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat&display=swap" rel="stylesheet">
    <link rel="icon" href="/images/icon.png">
</head>

<body class="bg-light">
<div class="mask d-flex align-items-center h-100 gradient-custom-3">
    <div class="container h-100">
      <div class="row d-flex justify-content-center align-items-center h-100">
        <div class="col-12 col-md-9 col-lg-7 col-xl-6">
          <div class="card" style="border-radius: 15px;">
            <div class="card-body p-5">
              <h2 class="text-center mb-5">DeliveryApp</h2>
                <h5 class="text-uppercase text-center">Create an account</h5>
                {{!-- <form name="register" method="post" action="/register"> --}}
                <form name="register">

                    <div class="form-outline mb-4">
                        <label class="form-label" for="username">Username</label>
                        <input type="text" name="username" placeholder="Janez123" class="form-control form-control-lg" />
                    </div>

                    <div class="form-outline mb-4">
                        <label class="form-label" for="address">Address</label>
                        <input type="text" name="address" placeholder="Večna pot 113" class="form-control form-control-lg" />
                    </div>

                    <div class="form-outline mb-4">
                        <label class="form-label" for="postalAddress">Postal Address</label>
                        <input type="number" name="postalAddress" placeholder="1000" class="form-control form-control-lg" />
                    </div>

                    <div class="form-outline mb-4">
                        <label class="form-label" for="form3Example4cg">Password</label>
                        <input type="password" name="password" class="form-control form-control-lg" />
                    </div>

                    <div class="form-group form-check mb-4">
                      <input type="checkbox" class="form-check-input" id="exampleCheck1" name="delivery">
                      <label class="form-check-label" for="exampleCheck1">Check if you are delivery</label>
                    </div>

                    <div class="d-flex justify-content-center">
                        <button type="submit"
                        class="btn btn-info btn-block btn-lg text-body">Register</button>
                    </div>

                    <p class="text-center text-muted mt-5 mb-0">Already have an account? 
                        <a href="/login" class="fw-bold text-body">
                            <u>Login here</u>
                        </a>
                    </p>
                </form>

            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</body>

<script>

const form = document.querySelector('form')
form.addEventListener('submit', (e) => {
  e.preventDefault()

  const formData = new FormData(form)
  getLatLng(formData.get("address"), formData.get("postalAddress")).then((latLng) => {
    formData.append("lat", parseFloat(latLng["lat"]));
    formData.append("lng", parseFloat(latLng["lng"]));

    data = {}
    for (const pair of formData.entries()) {
      data[pair[0]] = pair[1]
    }

    const role = document.getElementById("exampleCheck1").checked
    if (role){
      data["role"] = 1
    } else {
      data["role"] = 0
    }

 /*   var req = new XMLHttpRequest();
    req.open("POST", "/register", true);
    req.setRequestHeader("Content-Type", "application/json");
    req.addEventListener("load", function () {
      if(data["role"] == 1){
        window.location.assign('/restaurants')
      }
      else{
       window.location.assign('/orders') 
      }
    });
    req.send(JSON.stringify(data));*/

    fetch('/register', {
      method: 'POST',
      headers: {
          'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    });
    if(data["role"] == 0){
      window.location.assign('/restaurants')
    }
    else{
      window.location.assign('/orders') 
    }

  });
})


async function getLatLng (address, zip) {
  const newAddress = address.replace(/\s/g, '+')
  const url =  "https://nominatim.openstreetmap.org/search/?q="+newAddress+"&postalcode="+zip+"&format=json"
  let response = await fetch(url);
  let data = await response.json();
  return {
    "lat": data[0].lat,
    "lng": data[0].lon
  };
}

</script>